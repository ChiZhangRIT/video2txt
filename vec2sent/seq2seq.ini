[strings]
# Mode : train, eval
mode = train

# dataset: tacos, skipthought, skipgram
# vector_src = sent2vec
# # train mode
# train_vec_enc = vectors/tacos_short_train.pkl
# train_sent_dec = sentences/tacos_singlesentence_train.txt
# train_enc_info_file = sentences/tacos_short_info_train.json
# train_dec_info_file = sentences/tacos_singlesentence_info_train.json
# # eval mode
# test_vec_enc = vectors/tacos_short_test.pkl
# test_sent_dec = sentences/tacos_singlesentence_test.txt
# test_enc_info_file = sentences/tacos_short_info_test.json
# test_dec_info_file = sentences/tacos_singlesentence_info_test.json
# =============================================================================
vector_src = skipthought
# train mode
train_vec_enc = data/skipthought/tacos_short_train_vec_encoder.np
train_sent_dec = sentences/tacos_singlesentence_train.txt
train_enc_info_file = sentences/tacos_short_info_train.json
train_dec_info_file = sentences/tacos_singlesentence_info_train.json
# eval mode
test_vec_enc = data/skipthought/tacos_short_test_vec_encoder.np
test_sent_dec = sentences/tacos_singlesentence_test.txt
test_enc_info_file = sentences/tacos_short_info_test.json
test_dec_info_file = sentences/tacos_singlesentence_info_test.json
# =============================================================================
# vector_src = skipgram
# # train mode
# train_vec_enc = data/skipgram/tacos_short_train.txt.vec
# train_sent_dec = sentences/tacos_singlesentence_train.txt
# train_enc_info_file = sentences/tacos_short_info_train.json
# train_dec_info_file = sentences/tacos_singlesentence_info_train.json
# # eval mode
# test_vec_enc = data/skipgram/tacos_short_test.txt.vec
# test_sent_dec = sentences/tacos_singlesentence_test.txt
# test_enc_info_file = sentences/tacos_short_info_test.json
# test_dec_info_file = sentences/tacos_singlesentence_info_test.json

# folder where checkpoints, vocabulary, temporary data will be stored
working_directory = working_dir/
# pretrained word embedding, required if use_pretrained_embedding = true
pretrained_embedding_path = embedding/all_vocab_glove_spell_ckeck_50000.npy
# # pretrained projection, not used in the final model.
# pretrained_projection_path = embedding/_vocab_glove_intersection_emb_SpellCheck_inv.npy
# model path
model_directory = model/skipthought_512units/
# Summaries log directory
log_dir = log_dir/skipthought_512units/
# directory to save summarized sentence/paragraph
result_dir = result/skipthought_512units/

[booleans]
# # use glove
# pretrained_embedding = true

[ints]
# vocabulary size
# 	20,000 is a reasonable size
enc_vocab_size = 50000
dec_vocab_size = 50000
# number of LSTM layers : 1/2/3
num_layers = 3
# typical options : 128, 256, 512, 1024
layer_size = 512
# dataset size limit; typically none : no limit
max_train_data_size = 0
batch_size = 64
# steps per checkpoint
# 	Note : At a checkpoint, models parameters are saved, model is evaluated
#			and results are printed
steps_per_checkpoint = 500
# maximum number of steps
max_num_steps = 200000

[floats]
learning_rate = 0.5
learning_rate_decay_factor = 0.99
max_gradient_norm = 5.0
##############################################################################
# Note : Edit the bucket sizes at line47 of execute.py (_buckets)
#
#	Learn more about the configurations from this link
#		https://www.tensorflow.org/versions/r0.9/tutorials/seq2seq/index.html
##############################################################################
