[strings]
# Mode : train, eval, test
mode = train
# # dataset: wikipedia
# train_enc = data/wiki_en_normalized_clean.txt
# train_dec = data/wiki_en_normalized_clean.txt
# dataset: mscoco + Flickr + msvd + msrvtt
train_enc = data/_train_captions_Enc.txt
train_dec = data/_train_captions_Dec.txt
test_enc = data/test.enc
test_dec = data/test.dec
encoder_test_file = data/_val_all.txt
# folder where checkpoints, vocabulary, temporary data will be stored
working_directory = working_dir/
# pretrained word embedding, required if use_pretrained_embedding = true
pretrained_embedding_path = embedding/all_vocab_glove_spell_ckeck_50000.npy
# pretrained_embedding_path = embedding/_vocab_glove_intersection_emb_SpellCheck.npy
# pretrained projection (deprecated)
pretrained_projection_path = embedding/_vocab_glove_intersection_emb_SpellCheck_inv.npy
# model directory
model_directory = model/caption_1024units_noatt_50kvocab/
# Summaries log directory
log_dir = log_dir/caption_1024units_noatt_50kvocab/
# result directory
result_dir = result/caption_1024units_noatt_50kvocab/

[booleans]
# use glove
pretrained_embedding = true

[ints]
# vocabulary size: 20000 / 50000 is a reasonable size
enc_vocab_size = 50000
dec_vocab_size = 50000
# number of LSTM layers : 1/2/3
num_layers = 3
# typical options : 128, 256, 512, 1024
layer_size = 1024
# dataset size limit; typically 0: no limit
max_train_data_size = 0
batch_size = 256
# steps per checkpoint
# 	Note : At a checkpoint, models parameters are saved, model is evaluated
#			and results are printed
steps_per_checkpoint = 25000
# maximum number of steps
max_num_steps = 625000

[floats]
learning_rate = 0.0005
learning_rate_decay_factor = 0.99
max_gradient_norm = 1.0
##############################################################################
# Note : Edit the bucket sizes at line47 of execute.py (_buckets)
#
#	Learn more about the configurations from this link
#		https://www.tensorflow.org/versions/r0.9/tutorials/seq2seq/index.html
##############################################################################
